 
 
public class ListaDoble {
      Nodo primero;
      Nodo ultimo;
      int size;
    
     public void agregar(int contenido) {
        Nodo nuevoNodo = new Nodo(contenido);
        if (esVacia()) {
            primero = nuevoNodo;
            ultimo = nuevoNodo;
        } else {
            ultimo.setSiguiente(nuevoNodo);
            nuevoNodo.setAnterior(ultimo);
            ultimo = nuevoNodo;
        }
        
        size++;
    }
    
    public boolean esVacia() {
        return primero == null;
    }

    public String obtenerContenido(int index) {
        return obtenerNodo(index).getContenido();
    }
    
   
    
    public void imprimirLista() {
        if (esVacia()) {
             println("La lista esta vacia");
        } else {
        
            Nodo actual = primero;
            while(actual.getSiguiente() != null) {
                 println("contenido: " + actual.getContenido());
                actual = actual.getSiguiente();
            }
             println("contenido: " + actual.getContenido());
        }
    }

  
    
  
    
}




public class Maain {

	public  void main(String args[]) {
	        ListaDoble listaString = new ListaDoble();

            listaString.agregar("x");
            listaString.agregar("y");
            listaString.agregar("z");
            listaString.imprimirLista();
            
            // listaString.eliminarUltimo();
            // listaString.eliminarUltimo();
            // listaString.imprimirLista();
            
            // listaString.eliminarUltimo();
            // listaString.imprimirLista();
        
	}
}




public class Nodo {
    int contenido;
    Nodo siguiente;
    Nodo anterior;

    public Nodo(String contenido) {
        this.contenido = contenido;
    }

    public String getContenido() {
        return contenido;
    }

    // public void setContenido(String contenido) {
    //     this.contenido = contenido;
    // }

    // public Nodo getSiguiente() {
    //     return siguiente;
    // }

    public void setSiguiente(Nodo siguiente) {
        this.siguiente = siguiente;
    }
    
    public void setAnterior(Nodo anterior) {
        this.anterior = anterior;
    }
      

    // public Nodo getAnterior() {
    //     return anterior;
    // }
    
}

